/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javagraph;


import javax.swing.*;
import java.util.*;
import java.io.*;
/**
 *
 * @author javed
 */
public class Dijakstra extends javax.swing.JFrame {

    static ArrayList<Graph> vet;
    static ArrayList<Edge> edt;
  
    HashMap<String,Double> dist;    
    HashMap<String,Integer> visited;
    HashMap<String,String> parent;
    
    /**
     * Creates new form Dijakstra
     */
    public Dijakstra(ArrayList<Graph> vet , ArrayList<Edge> edt) {
        initComponents();
         
        this.vet = vet;
        this.edt =edt;
 
        dist = new HashMap<String, Double>(vet.size());
        visited = new HashMap<String,Integer>(vet.size());
        parent = new HashMap<String, String>(edt.size());
        
        String gr[] = new String[vet.size()];
        String re[] = new String[vet.size()];
        
        for(int i = 0; i < vet.size(); i++)
        {
            gr[i] = vet.get(i).getVertex() + " " + vet.get(i).getX() + " " + vet.get(i).getY();
        }
        for(int i = 0; i < vet.size(); i++)
        {
            re[i] = vet.get(i).getVertex() + " " + vet.get(i).getX() + " " + vet.get(i).getY();
        }
        
        xx.setModel(new javax.swing.DefaultComboBoxModel<>(gr));
        yy.setModel(new javax.swing.DefaultComboBoxModel<>(re));
    }
    
    public String MiniVertex()
    {
        double min = Double.MAX_VALUE;
        String min_vertex= null;
        
       for(int j = 0; j < vet.size(); j++)
       {
          if(visited.get(vet.get(j).getVertex()) == 0 && dist.get(vet.get(j).getVertex()) < min)
          {
             min = dist.get(vet.get(j).getVertex());
             min_vertex = vet.get(j).getVertex();
          }
        }
       
       return min_vertex;
    }        
            
    
    public void CalculateDijakstra(String src , String dest)
    {
        
        for(int i = 0; i < vet.size(); i++)
        {
            dist.put(vet.get(i).getVertex(),Double.MAX_VALUE);
            visited.put(vet.get(i).getVertex(), 0);
            parent.put(vet.get(i).getVertex(),null);
        }
        
        dist.put(src , 0.0);
   
        for(int i = 0; i < vet.size()-1; i++)
        {
            String temp = MiniVertex();
            System.out.println(temp);
            visited.put(temp,1);
            
            for(int j = 0; j < edt.size(); j++)
            {
               if(edt.get(j).getV1().getVertex().equals(temp))
               {
                   String temp1 = edt.get(j).getV2().getVertex();
                   double apart = edt.get(j).getWeight();
                   if((visited.get(temp1) == 0) && (dist.get(temp)!= Double.MAX_VALUE) && (dist.get(temp1) > dist.get(temp) + apart) )
                   {
                       dist.put(temp1, dist.get(temp) + apart);
                       parent.put(temp1, temp);
                   }
               }
            }
        }
        String word = "";
        int count = 0;
        if(parent.get(dest) == null)
        {
            JOptionPane.showMessageDialog(null ,"No path is available");
        }
        else
        {
            int a = 0;
            while(parent.get(dest) != src)
           {
              word += dest + " -< ";
              dest = parent.get(dest);
              if(dest == null)
              {
                  count++;
                  break;
              }
              a++;
           }
           if(count == 0 || a==0)
           {
               word += dest + " -< " + src;
               JOptionPane.showMessageDialog(null ,word);
           }
           else if(count >0 || a==0)
             JOptionPane.showMessageDialog(null ,"No path is available");
              
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        xx = new javax.swing.JComboBox<>();
        yy = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel1.setText("          Shortest  Path");

        jLabel2.setText("Enter Source Vertex");

        jLabel3.setText("Enter Destination Vertex");

        xx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        xx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xxActionPerformed(evt);
            }
        });

        yy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        yy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yyActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        jButton1.setText("Display Shortest Path");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel3)))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(xx, 0, 163, Short.MAX_VALUE)
                            .addComponent(yy, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(110, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void xxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xxActionPerformed

    private void yyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yyActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        int index1 = xx.getSelectedIndex();
        int index2 = yy.getSelectedIndex();
        
        Graph a = vet.get(index1);
        Graph b = vet.get(index2);
        
        CalculateDijakstra(a.getVertex(),b.getVertex());
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dijakstra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dijakstra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dijakstra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dijakstra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dijakstra(vet,edt).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox<String> xx;
    private javax.swing.JComboBox<String> yy;
    // End of variables declaration//GEN-END:variables
}
